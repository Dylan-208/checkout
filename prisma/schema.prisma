generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
id String @id @default(uuid())
email String @unique
password String 
name String
isAdmin Boolean @default(false)

createdAt DateTime @default(now())
updatedAt DateTime @updatedAt

cart Cart []
order Order[]

@@map("user")
}

model Product {
  id String @id @default(uuid())
  name String
  price Float
  stock Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cartItem CartItem[]
  orderItem OrderItem[]

  @@map("product")
}

model Cart {
  id String @id @default(uuid())
  user_id String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [user_id], references: [id]) 

  cartItem CartItem []

  @@map("cart")
}

model CartItem {
  id String @id @default(uuid())
  cart_id String
  product_id String
  quantity Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product @relation(fields: [product_id], references: [id])
  cart Cart @relation(fields: [cart_id], references: [id])

  @@map("cart_item")
}

model Order {
  id String @id @default(uuid())
  user_id String
  total Float
  status String
  payment_id String?
  payment_status String?


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [user_id], references:[id])
  orderItem OrderItem[]

  @@map("order")
}

model OrderItem {
  id String @id @default(uuid())
  order_id String
  product_id String
  quantity Int
  price Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  order Order @relation(fields: [order_id], references:[id])
  product Product @relation(fields: [product_id], references: [id])

  @@map("order_item")
}


